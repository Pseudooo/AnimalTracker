name: Generate Database Diagram
on:
  pull_request: 
    branches:
      - master
  push:
    paths: 
      - ./src/AnimalTrack.Migrations/**
    branches:
      - master

env:
  DOTNET_VERSION: 8.x.x

jobs:
  generate-db-diagram:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      pull-requests: write
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: WhatTheFooBar123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          
      - name: Run Migrations
        working-directory: src/AnimalTrack.Migrations
        run: dotnet run

      - name: Install pg-mermaid
        run: npm install -g pg-mermaid
        
      - name: Generate Diagram
        run: pg-mermaid --dbname AnimalTrack --username postgres --password WhatTheFooBar123 --host 127.0.0.1 --port 5432 --output-path ./db-schema.md

      - name: ðŸ’¬ Comment Diagram
        uses: actions/github-script@v7

        with:
          github-token: ${{ github.token }}
          script: |
            const fs = require("node:fs");
            const diagramMarkdown = fs.readFileSync("./db-schema.md");
            console.log(diagramMarkdown);
            github.rest.issues.createComment({
                issue_number: ${{ github.event.number }},
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: diagramMarkdown
            });